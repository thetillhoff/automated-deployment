# install and configure vscode
- name: install vscode
  become: true
  snap:
    name: code
    classic: yes
- include_tasks: subtasks/subtask_add_path.yml
  vars:
    extra_path: "{{ item }}"
  with_items:
    - /snap/bin
- include_tasks: subtasks/subtask_vscode_extension.yml
  vars:
    extension: "{{ item }}"
  with_items:
    - ms-azuretools.vscode-docker
    - ms-python.python
    - ms-vscode.Go
    #- tomoki1207.pdf
#- name: configure vscode
  #copy:
  #content: |
  #          {
  #          "git.autofetch":true,
  #          "keyboard.dispatch":"keyCode",
  #          "workbench.startupEditor":"newUntitledFile",
  #          "editor.wordWrap":"on"
  #          }
  #dest: ~/.config/Code/User/settings.json

  
- name: configure vscode
  template:
    src: settings.json.j2
    dest: '{{ homedir }}/.config/Code/User/settings.json'
    force: true
    #mode: 'u=rw,go=' # not sure if this is required
  vars:
    content: {
      "git.autofetch":true,
      "keyboard.dispatch":"keyCode",
      "workbench.startupEditor":"newUntitledFile",
      "editor.wordWrap":"on"
      }

# install and configure git-cli
- name: install git
  become: true
  apt:
    name:
      - git
- name: configure git global values
  become: true
  become_user: "{{ user }}"
  block:
    - git_config:
        name: user.name
        scope: global
        value: "{{ git_name }}"
    - git_config:
        name: user.email
        scope: global
        value: "{{ git_mail }}"

# install git-ui
- name: install gitcola
  become: true
  apt:
    name:
      - git-cola

# install python-pip
- name: install pip
  become: true
  apt:
    name: python-pip

# install golang
- name: check if go is installed
  stat:
    path: /usr/local/go/bin
  register: go_result
- name: install golang
  become: true
  shell: curl -L https://dl.google.com/go/go{{ golang_version }}.linux-amd64.tar.gz -o ./go.tar.gz && sudo tar -C /usr/local -xzf ./go.tar.gz && rm ./go.tar.gz
  when: go_result.stat.exists == false
- include_tasks: subtasks/subtask_add_path.yml
  vars:
    extra_path: "{{ item }}"
  with_items:
    - /usr/local/go/bin

# install go-task
- name: check if go-task is installed
  stat:
    path: /usr/local/bin/task
  register: gotask_result
- name: install go-task
  become: true
  shell: curl -L https://github.com/go-task/task/releases/download/v{{ gotask_version }}/task_linux_amd64.deb -o ./go-task.deb && sudo dpkg -i ./go-task.deb && sudo rm ./go-task.deb
  when: gotask_result.stat.exists == false
  #task is added to /usr/local/bin/ and is thus automatically added to path

# install nodejs
- name: install dependencies for nodejs
  become: true
  apt:
    name:
      - apt-transport-https
      - gnupg2
    state: present
- name: add nodejs repo-key
  become: true
  apt_key:
    url: https://deb.nodesource.com/gpgkey/nodesource.gpg.key
    state: present
- name: add nodejs repo to apt
  become: true
  apt_repository:
    repo: "{{ item }}"
    state: present
  with_items:
    - "deb https://deb.nodesource.com/node_{{ nodejs_version }} {{ ansible_distribution_release }} main"
    - "deb-src https://deb.nodesource.com/node_{{ nodejs_version }} {{ ansible_distribution_release }} main"
  register: node_repo
- name: update apt cache if repo was added
  become: true
  apt: update_cache=yes
  when: node_repo.changed
- name: install nodejs with npm
  become: true
  apt:
    name: "nodejs={{ nodejs_version|regex_replace('x', '') }}*"
    state: present

# install helm
- name: check if helm is installed
  become: true
  stat:
    path: /usr/local/bin/helm
  register: helm_result
- name: install helm
  become: true
  shell: curl -L https://git.io/get_helm.sh | bash
  args:
    warn: false
  when: helm_result.stat.exists == false
